<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Jack&#39;s Note</title>
        <link>https://example.com/post/</link>
        <description>Recent content in Posts on Jack&#39;s Note</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-tw</language>
        <lastBuildDate>Tue, 15 Apr 2025 15:34:43 +0800</lastBuildDate><atom:link href="https://example.com/post/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>JWT Note</title>
        <link>https://example.com/post/jwt/</link>
        <pubDate>Tue, 15 Apr 2025 15:34:43 +0800</pubDate>
        
        <guid>https://example.com/post/jwt/</guid>
        <description>&lt;h2 id=&#34;jwt-是什麼&#34;&gt;JWT 是什麼
&lt;/h2&gt;&lt;p&gt;JWT 全名是 JSON Wenb Token，用來以 Json 的方式來傳遞資訊。
JWT 由三個部分組成，並以.做為分隔:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Header
由以下兩個欄位組成，並且使用 Base64 進行編碼，要注意的是 Base64 編碼是可以被逆向解碼的。
&lt;ul&gt;
&lt;li&gt;alg : token 用來加密的演算法&lt;/li&gt;
&lt;li&gt;typ : token 的類型&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Payload
存放要的傳遞資料，除了客製化資料外，也可以使用 JWT 所定義的變數名稱，Payload 一樣是經過 Base64 編碼，不適合用來存放機敏的資料。
以下是一些常見變數，更詳細可以參考 &lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/JSON_Web_Token&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;wiki&lt;/a&gt;。
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;iss(Issuer) : JWT 的簽發者
sub(Subject) : 主題，可以放用戶id
aud(Audience) : JWT 的接收者
exp(Expiration Time) : JWT 的過期時間
nbf(Not Before) : JWT 在此欄位的時間點，都是不可以使用的
iat(Issued at) : JWT 的簽發時間
jti(JWT ID) : JWT 的唯一身分標示
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Signature
用於保證資料未被傳改，由 header + . + payload + secret 加密後產生。
secret 為一組字串，存放於伺服器端，如果 secret 外漏，使用者便可以自己產生 JWT&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;如何使用-jwt&#34;&gt;如何使用 JWT
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;使用者登入後，Server 驗證成功後會產生一組 JWT。&lt;/li&gt;
&lt;li&gt;Server 將 JWT 回傳給 Client，Client 會儲存 JWT ，可以存放在 localStorage 或 cookie。&lt;/li&gt;
&lt;li&gt;當 Client 要請求時，必須附上 JWT。&lt;/li&gt;
&lt;li&gt;Server 收到後會去檢查 JWT Token 是否可用。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;優缺點&#34;&gt;優缺點
&lt;/h2&gt;&lt;h3 id=&#34;優點&#34;&gt;優點
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;JWT 可以存放在 Client 端， Server 不用維護 Session。&lt;/li&gt;
&lt;li&gt;可以在不同的網域中使用，因為在前後端分離的話，前後端可能位於不同網域，cookie 無法跨網域使用，所以不能用 cookie 來做身分驗證。使用 JWT 可以在不需登入的情況下，串接多個不同網域的服務。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;缺點&#34;&gt;缺點
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;JWT 無法由 Server 端主動撤銷。&lt;/li&gt;
&lt;li&gt;JWT 的內容並不是加密。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://kucw.io/blog/jwt/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://kucw.io/blog/jwt/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/JSON_Web_Token&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://en.wikipedia.org/wiki/JSON_Web_Token&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://medium.com/%E4%BC%81%E9%B5%9D%E4%B9%9F%E6%87%82%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88/jwt-json-web-token-%E5%8E%9F%E7%90%86%E4%BB%8B%E7%B4%B9-74abfafad7ba&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://medium.com/%E4%BC%81%E9%B5%9D%E4%B9%9F%E6%87%82%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88/jwt-json-web-token-%E5%8E%9F%E7%90%86%E4%BB%8B%E7%B4%B9-74abfafad7ba&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.explainthis.io/zh-hant/swe/jwt&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.explainthis.io/zh-hant/swe/jwt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://medium.com/@smart_iceberg_goat_568/%E8%A7%80%E5%BF%B5%E7%AD%86%E8%A8%98-jwt-%E8%AA%8D%E8%AD%89%E6%A9%9F%E5%88%B6-5cb7e4e69736&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://medium.com/@smart_iceberg_goat_568/%E8%A7%80%E5%BF%B5%E7%AD%86%E8%A8%98-jwt-%E8%AA%8D%E8%AD%89%E6%A9%9F%E5%88%B6-5cb7e4e69736&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
